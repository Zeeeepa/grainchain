[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "grainchain"
dynamic = ["version"]
description = "Langchain for sandboxes - A unified interface for sandbox providers"
readme = "README.md"
license = "MIT"
requires-python = ">=3.9"
authors = [
    { name = "Codegen Team", email = "team@codegen.com" },
]
keywords = [
    "sandbox",
    "containers",
    "code-execution",
    "ai",
    "langchain",
    "e2b",
    "modal",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]
dependencies = [
    "aiohttp>=3.8.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
e2b = ["e2b>=0.13.0"]
modal = ["modal>=0.74.0"]
all = ["grainchain[e2b,modal]"]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]

[project.urls]
Homepage = "https://github.com/codegen-sh/grainchain"
Documentation = "https://github.com/codegen-sh/grainchain#readme"
Repository = "https://github.com/codegen-sh/grainchain"
Issues = "https://github.com/codegen-sh/grainchain/issues"

[tool.hatch.version]
path = "grainchain/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["grainchain"]

[tool.black]
line-length = 88
target-version = ["py39"]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=grainchain",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.ruff]
line-length = 88
target-version = "py39"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
]

[tool.coverage.run]
source = ["grainchain"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

